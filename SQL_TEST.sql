-- 1. 查询没学过“谌燕”老师课的同学，显示（学号、姓名）
SELECT STUDENT_NO, STUDENT_NAME FROM HAND_STUDENT WHERE STUDENT_NO NOT IN (
	SELECT STUDENT_NO FROM HAND_STUDENT_CORE WHERE COURSE_NO IN(
		SELECT COURSE_NO FROM HAND_COURSE WHERE TEACHER_NO = (
			SELECT TEACHER_NO FROM HAND_TEACHER WHERE TEACHER_NAME = '谌燕'
		)
	)
);

-- 2. 查询没有学全所有课的同学，显示（学号、姓名）
SELECT STUDENT_NO, STUDENT_NAME FROM HAND_STUDENT WHERE STUDENT_NO NOT IN (
	SELECT STUDENT_NO FROM HAND_STUDENT_CORE WHERE COURSE_NO = ALL (
		SELECT COURSE_NO FROM HAND_COURSE
	)
);

-- 3、查询“c001”课程比“c002”课程成绩高的所有学生，显示（学号、姓名）
SELECT STUDENT_NO, STUDENT_NAME FROM HAND_STUDENT WHERE STUDENT_NO IN (
	SELECT STUDENT_NO FROM (
		SELECT t1.STUDENT_NO, t1.CORE AS "CORE_1", t1.COURSE_NO, t2.CORE AS "CORE_2", t2.COURSE_NO AS "COURSE_NO_2" FROM (
			SELECT STUDENT_NO, CORE, COURSE_NO FROM HAND_STUDENT_CORE WHERE (COURSE_NO = 'c001' OR COURSE_NO = 'c002') AND STUDENT_NO IN (
				SELECT STUDENT_NO FROM HAND_STUDENT_CORE WHERE STUDENT_NO IN (
					SELECT STUDENT_NO FROM HAND_STUDENT_CORE WHERE COURSE_NO = 'c001'
				) AND COURSE_NO = 'c002'
			)
		) t1 LEFT JOIN HAND_STUDENT_CORE t2 ON t1.STUDENT_NO = t2.STUDENT_NO AND (t2.COURSE_NO = 'c001' OR t2.COURSE_NO = 'c002')
	) t WHERE COURSE_NO = 'c001' AND COURSE_NO_2 = 'c002' AND CORE_1 > CORE_2
);

-- 4、按各科平均成绩和及格率的百分数，按及格率高到低顺序，显示（课程号、平均分、及格率）
SELECT (t2.GOOD_COUNT / t1.ALL_COUNT) * 100 AS "CORE_PERCENT", t1.COURSE_NO, AVG(t3.CORE) FROM (
	SELECT COUNT(COURSE_NO) AS "ALL_COUNT", COURSE_NO FROM HAND_STUDENT_CORE GROUP BY COURSE_NO
) t1 LEFT JOIN (
	SELECT COUNT(COURSE_NO) AS "GOOD_COUNT", COURSE_NO FROM HAND_STUDENT_CORE WHERE CORE > 60  GROUP BY COURSE_NO
) t2 ON t1.COURSE_NO = t2.COURSE_NO RIGHT JOIN HAND_STUDENT_CORE t3 ON t1.COURSE_NO = t3.COURSE_NO GROUP BY t3.COURSE_NO ORDER BY CORE_PERCENT DESC

-- 5、1992年之后出生的学生名单找出年龄最大和最小的同学，显示（学号、姓名、年龄）
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_AGE FROM HAND_STUDENT WHERE DATE_FORMAT(CREATION_DATE, '%Y') > '1992'

-- 6、统计列出矩阵类型各分数段人数，横轴为分数段[100-85]、[85-70]、[70-60]、[<60]，纵轴为课程号、课程名称   X

-- 7、查询各科成绩前三名的记录:(不考虑成绩并列情况)，显示（学号、课程号、分数）    X
SELECT MAX(CORE) FROM HAND_STUDENT_CORE WHERE CORE NOT IN (
	SELECT MAX(CORE) FROM HAND_STUDENT_CORE WHERE CORE NOT IN (
		SELECT MAX(CORE) FROM HAND_STUDENT_CORE GROUP BY COURSE_NO
	) GROUP BY COURSE_NO
) GROUP BY COURSE_NO

-- 8、查询选修“谌燕”老师所授课程的学生中每科成绩最高的学生，显示（学号、姓名、课程名称、成绩）
SELECT t5.STUDENT_NAME, t5.STUDENT_NO, t6.COURSE_NO, t6.CORE FROM HAND_STUDENT t5 INNER JOIN(
	SELECT t4.STUDENT_NO, t4.COURSE_NO, t4.CORE FROM (
		SELECT t1.COURSE_NO, t2.MAX_CORE FROM (
			SELECT COURSE_NO FROM HAND_COURSE WHERE TEACHER_NO = (
				SELECT TEACHER_NO FROM HAND_TEACHER WHERE TEACHER_NAME = '谌燕'
			)
		) t1 INNER JOIN (
			SELECT MAX(CORE) AS "MAX_CORE", COURSE_NO FROM HAND_STUDENT_CORE GROUP BY COURSE_NO
		) t2 ON t2.COURSE_NO = t1.COURSE_NO
	) t3 INNER JOIN HAND_STUDENT_CORE t4 ON t3.COURSE_NO = t4.COURSE_NO AND t3.MAX_CORE = t4.CORE
) t6 ON t5.STUDENT_NO = t6.STUDENT_NO

-- 9、查询两门及以上不及格课程的同学及平均成绩，显示（学号、姓名、平均成绩（保留两位小数））
SELECT ROUND(AVG(CORE), 2) FROM HAND_STUDENT_CORE t1 INNER JOIN (
	SELECT COUNT(STUDENT_NO) AS "COUNT", STUDENT_NO FROM HAND_STUDENT_CORE WHERE CORE < 60 GROUP BY STUDENT_NO
) t2 ON t1.STUDENT_NO = t2.STUDENT_NO AND t2.COUNT >= 2 GROUP BY t2.STUDENT_NO

-- 10、查询姓氏数量最多的学生名单，显示（学号、姓名、人数）
SELECT STUDENT_NO, STUDENT_NAME, COUNT FROM (
	SELECT FIRST_NAME, COUNT FROM (
		SELECT count(t1.FIRST_NAME) as "COUNT", FIRST_NAME FROM (
			SELECT LEFT(STUDENT_NAME, 1) AS "FIRST_NAME" FROM HAND_STUDENT
		) t1 GROUP BY t1.FIRST_NAME
	) t4 WHERE COUNT = (
		SELECT MAX(COUNT) FROM (
			SELECT count(t2.FIRST_NAME) as "COUNT", FIRST_NAME FROM (
				SELECT LEFT(STUDENT_NAME, 1) AS "FIRST_NAME" FROM HAND_STUDENT
			) t2 GROUP BY t2.FIRST_NAME
		) t3
	)
) t5 INNER JOIN HAND_STUDENT t6 ON t5.FIRST_NAME = LEFT(t6.STUDENT_NAME, 1)

-- 11、查询课程名称为“J2SE”的学生成绩信息，90以上为“优秀”、80-90为“良好”、60-80为“及格”、60分以下为“不及格”，显示（学号、姓名、课程名称、成绩、等级）   X
SELECT STUDENT_NO, CORE FROM HAND_STUDENT_CORE
	CASE CORE
	WHEN CORE > 90 THEN
		RETURN '优秀'
	WHEN CORE > 80 THEN
		RETURN '良好'
	WHEN CORE > 60 THEN
		RETURN '及格'
	ELSE
		RETURN '不及格'
	END CASE；

-- 12、查询教师“胡明星”的所有主管及姓名:（无主管的教师也需要显示），显示（教师编号、教师名称、主管编号、主管名称）
SELECT t1.TEACHER_NO, t1.TEACHER_NAME, t1.MANAGER_NO, t2.TEACHER_NAME FROM HAND_TEACHER t1 LEFT JOIN HAND_TEACHER t2 ON t1.MANAGER_NO = t2.TEACHER_NO;

-- 14、分别根据教师、课程、教师和课程三个条件统计选课的学生数量：(使用 rollup),显示（教师名称、课程名称、选课数量）
SELECT COALESCE(COURSE_NAME, '总数量') AS "COURSE_NAME", SUM(NUM) AS '选课数量' FROM HAND_COURSE t1 RIGHT JOIN (
	SELECT COURSE_NO, COUNT(STUDENT_NO) AS 'NUM' FROM HAND_STUDENT_CORE GROUP BY COURSE_NO
) t2 ON t1.COURSE_NO = t2.COURSE_NO GROUP BY COURSE_NAME WITH ROLLUP

SELECT COALESCE(TEACHER_NAME, '总数量') AS 'TEACHER_NAME', SUM(NUM) AS '选课数量' FROM HAND_TEACHER t3 RIGHT JOIN (
	SELECT TEACHER_NO, NUM FROM HAND_COURSE t1 RIGHT JOIN (
		SELECT COURSE_NO, COUNT(STUDENT_NO) AS "NUM" FROM HAND_STUDENT_CORE GROUP BY COURSE_NO
	) t2 ON t1.COURSE_NO = t2.COURSE_NO
) t4 ON t3.TEACHER_NO = t4.TEACHER_NO GROUP BY TEACHER_NAME WITH ROLLUP